#!/usr/bin/env bash
# Summary: Configure the shell environment for tlenv
# Usage: eval "$(tlenv init - [--no-rehash] [<shell>])"

set -e
[ -n "$TLENV_DEBUG" ] && set -x

# Provide tlenv completions
if [ "$1" = "--complete" ]; then
  echo -
  echo --no-rehash
  echo bash
  echo fish
  echo ksh
  echo zsh
  exit
fi

print=""
no_rehash=""
for args in "$@"
do
  if [ "$args" = "-" ]; then
    print=1
    shift
  fi

  if [ "$args" = "--no-rehash" ]; then
    no_rehash=1
    shift
  fi
done

shell="$1"
if [ -z "$shell" ]; then
  shell="$(ps -p "$PPID" -o 'args=' 2>/dev/null || true)"
  shell="${shell%% *}"
  shell="${shell##-}"
  shell="${shell:-$SHELL}"
  shell="${shell##*/}"
  shell="${shell%%-*}"
fi

root="${0%/*}/.."

if [ -z "$print" ]; then
  case "$shell" in
  bash )
    if [ -f "${HOME}/.bashrc" ] && [ ! -f "${HOME}/.bash_profile" ]; then
      profile='~/.bashrc'
    else
      profile='~/.bash_profile'
    fi
    ;;
  zsh )
    profile='~/.zshrc'
    ;;
  ksh )
    profile='~/.profile'
    ;;
  fish )
    profile='~/.config/fish/config.fish'
    ;;
  * )
    profile='your profile'
    ;;
  esac

  { echo "# Load tlenv automatically by appending"
    echo "# the following to ${profile}:"
    echo
    case "$shell" in
    fish )
      echo 'status --is-interactive; and tlenv init - fish | source'
      ;;
    * )
      printf 'eval "$(tlenv init - %s)"\n' "$shell"
      ;;
    esac
    echo
  } >&2

  exit 1
fi

mkdir -p "${TLENV_ROOT}/"{shims,versions}

case "$shell" in
fish )
  echo "set -gx PATH '${TLENV_ROOT}/shims' \$PATH"
  echo "set -gx TLENV_SHELL $shell"
;;
* )
  echo 'export PATH="'${TLENV_ROOT}'/shims:${PATH}"'
  echo "export TLENV_SHELL=$shell"

  completion="${root}/completions/tlenv.${shell}"
  if [ -r "$completion" ]; then
    echo "source '$completion'"
  fi
;;
esac

if [ -z "$no_rehash" ]; then
  echo 'command tlenv rehash 2>/dev/null'
fi

commands=(`tlenv-commands --sh`)
case "$shell" in
fish )
  cat <<EOS
function tlenv
  set command \$argv[1]
  set -e argv[1]

  switch "\$command"
  case ${commands[*]}
    tlenv "sh-\$command" \$argv|source
  case '*'
    command tlenv "\$command" \$argv
  end
end
EOS
  ;;
ksh )
  cat <<EOS
function tlenv {
  typeset command
EOS
  ;;
* )
  cat <<EOS
tlenv() {
  local command
EOS
  ;;
esac

if [ "$shell" != "fish" ]; then
IFS="|"
cat <<EOS
  command="\${1:-}"
  if [ "\$#" -gt 0 ]; then
    shift
  fi

  case "\$command" in
  ${commands[*]})
    eval "\$(tlenv "sh-\$command" "\$@")";;
  *)
    command tlenv "\$command" "\$@";;
  esac
}
EOS
fi
